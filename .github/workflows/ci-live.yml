name: ci-live

on:
  workflow_dispatch:
    inputs:
      epoch:
        description: "Epoch number to anchor/artifact"
        required: true
        default: "1"

jobs:
  live_or_dry:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      NODE_VERSION: "20"
      CHAIN_ID: "16601"
      RPC_ENDPOINT: ${{ secrets.RPC_ENDPOINT || '' }}
      PRIVATE_KEY:  ${{ secrets.PRIVATE_KEY  || '' }}
      OG_STORAGE_API_BASE: ${{ secrets.OG_STORAGE_API_BASE || '' }}
      OG_STORAGE_API_TOKEN: ${{ secrets.OG_STORAGE_API_TOKEN || '' }}
      OG_GATEWAY_BASE: ${{ secrets.OG_GATEWAY_BASE || '' }}
      FL_TEE_PUBKEY_B64: ${{ secrets.FL_TEE_PUBKEY_B64 || '' }}
      FL_ENC_DELETE_PLAINTEXT: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1 (pinned)

      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Prepare aggregated model (dry fallback)
        run: |
          if [ ! -f aggregated_model.json ]; then
            echo '{"weights":[0.1,0.2,0.3]}' > aggregated_model.json
          fi
          ls -l aggregated_model.json

      - name: Encrypt sample client update (smoke)
        run: |
          echo '{"round":${{ github.event.inputs.epoch }}, "weights":[0.01,0.02]}' > client_update.json
          node dist/crypto/encrypt_update_loader.js client_update.json --out client_update.enc.json
          test -f client_update.enc.json

      - name: Upload aggregated model to storage (if secrets present)
        id: upload
        run: |
          if [ -n "${OG_STORAGE_API_BASE}" ]; then
            node scripts/upload_ipfs_api.js aggregated_model.json > upload.json
          else
            echo '{"cid":"drycid","size":0,"url":"ipfs://drycid"}' > upload.json
          fi
          cat upload.json

      - name: Create minimal attestation (dry fallback)
        run: |
          if [ ! -f attestation.json ]; then
            echo '{"enclave":"dev","mrEnclave":"0x00","nonce":"test"}' > attestation.json
          fi

      - name: Build market manifest
        run: |
          CID=$(jq -r .cid upload.json)
          URL=$(jq -r .url upload.json)
          node scripts/make_market_manifest.js --epoch ${{ github.event.inputs.epoch }} --globalModelPath aggregated_model.json --cid "$CID" --url "$URL" --attestation attestation.json --out market_manifest.json
          cat market_manifest.json | head -n 50

      - name: Upload artifacts
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a  # v4.3.4
        with:
          name: ci-live-${{ github.run_attempt }}
          path: |
            upload.json
            aggregated_model.json
            client_update.enc.json
            attestation.json
            market_manifest.json