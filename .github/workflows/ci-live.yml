name: ci-live

on:
  workflow_dispatch:
    inputs:
      epoch:
        description: "Epoch number to anchor/artifact"
        required: true
        default: "1"

jobs:
  live_or_dry:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      NODE_VERSION: "20"
      CHAIN_ID: "16601"
      RPC_ENDPOINT: ${{ secrets.RPC_ENDPOINT }}
      PRIVATE_KEY:  ${{ secrets.PRIVATE_KEY  }}
      OG_STORAGE_API_BASE: ${{ secrets.OG_STORAGE_API_BASE }}
      OG_STORAGE_API_TOKEN: ${{ secrets.OG_STORAGE_API_TOKEN }}
      OG_GATEWAY_BASE: ${{ secrets.OG_GATEWAY_BASE }}
      FL_TEE_PUBKEY_B64: ${{ secrets.FL_TEE_PUBKEY_B64 }}
      FL_ENC_DELETE_PLAINTEXT: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Prepare aggregated model (dry fallback)
        run: |
          if [ ! -f aggregated_model.json ]; then
            echo '{"weights":[0.1,0.2,0.3]}' > aggregated_model.json
          fi
          ls -l aggregated_model.json

      - name: Assert encryptor exists (non-fatal)
        continue-on-error: true
        run: |
          test -f dist/crypto/encrypt_update.js && echo "encryptor present" || echo "encryptor missing on CI"

      - name: Encrypt sample client update (smoke)
        continue-on-error: true
        run: |
          echo '{"round":${{ github.event.inputs.epoch }}, "weights":[0.01,0.02]}' > client_update.json
          if [ -f dist/crypto/encrypt_update.js ]; then
            node scripts/encrypt_update_loader.js client_update.json --out client_update.enc.json
          else
            echo '{}' > client_update.enc.json
            echo 'WARN: dist/crypto/encrypt_update.js missing; emitted placeholder client_update.enc.json'
          fi
          ls -l client_update.enc.json

      - name: Upload aggregated model to storage (real or dry)
  id: upload
  run: |
    set -euo pipefail
    if [ -n "\" ]; then
      echo "Attempting real upload via \/api/v0/add"
      if node scripts/upload_ipfs_api.js aggregated_model.json > upload.json 2>upload.err; then
        echo "Upload OK"; cat upload.json
      else
        echo "WARN: upload failed; falling back to dry" >&2
        cat upload.err || true
        echo '{"cid":"drycid","size":0,"url":"ipfs://drycid"}' > upload.json
      fi
    else
      echo "No storage base set; using dry artifact"
      echo '{"cid":"drycid","size":0,"url":"ipfs://drycid"}' > upload.json
    fi
\1 Create minimal attestation (dry fallback)
        run: |
          if [ ! -f attestation.json ]; then
            echo '{"enclave":"dev","mrEnclave":"0x00","nonce":"test"}' > attestation.json
          fi

      - name: Build market manifest
        run: |
          CID=$(jq -r .cid upload.json)
          URL=$(jq -r .url upload.json)
          node scripts/make_market_manifest.js --epoch ${{ github.event.inputs.epoch }} --globalModelPath aggregated_model.json --cid "$CID" --url "$URL" --attestation attestation.json --out market_manifest.json
          head -n 100 market_manifest.json || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a
        with:
          name: ci-live-${{ github.run_attempt }}
          path: |
            upload.json
            aggregated_model.json
            client_update.enc.json
            attestation.json
            market_manifest.json
