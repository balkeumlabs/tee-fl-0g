name: ci-no-tx

on:
  push:


  workflow_dispatch:
    branches: [ rao ]

jobs:
  round-no-tx:
    runs-on: ubuntu-latest
    env:
      NO_TX: "1"
      # guard pubkey for security preambles
      FL_TEE_PUBKEY_B64: "3p7bfXt9wbTTW2HC7OQ1Nz+DQ8hbeGdNrfx+FG+IK08="
      # attestation gating envs â€” strings, not booleans
      TEE_ATTEST_MEAS_ALLOWLIST: '["SIM-TEE-DEMO-1"]'
      TEE_ATTEST_ENCLAVE_ID: "SIM-TEE"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (22.x)
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ""

      - name: Print env
        run: |
          node -v
          npm -v
          pwd
          ls -la

      - name: Install deps
        run: npm ci --include=dev

      - name: Build dist (if present)
        run: npm run build --if-present

      - name: Build (Hardhat)
        run: npx hardhat compile --config hardhat.galileo.js

      - name: Sanity: dist presence
        run: |
          ls -la dist || true
          ls -la dist/crypto || true
          test -f dist/crypto/encrypt_update.js || { echo "::error::missing dist/crypto/encrypt_update.js"; exit 1; }

      - name: Write attestation file (self-contained)
        shell: bash
        run: |
          set -euo pipefail
          cat > attestation_sample.json <<'JSON'
          { "ok": true, "measurement": "SIM-TEE-DEMO-1", "enclave_id": "SIM-TEE", "nonce": "demo" }
          JSON
          cat attestation_sample.json

      - name: Debug: module resolution (non-fatal)
        shell: bash
        continue-on-error: true
        run: |
          set -euo pipefail
          node -p "process.versions"
          npm ls libsodium-wrappers || true
          npm ls tweetnacl || true
          node -p "require.resolve('libsodium-wrappers')" || true
          node -p "require.resolve('tweetnacl')" || true
          head -n 30 dist/crypto/encrypt_update.js || true

      - name: Prepare update + encrypt
        shell: bash
        run: |
          set -euo pipefail
          echo '{"r":1,"weights":[0.1,0.2]}' > u.json
          node dist/crypto/encrypt_update.js --in u.json --out u.enc.json
          ls -la u*.json

      - name: Submit (NO_TX)
        run: node -r scripts/_argv_prep.cjs scripts/submit_update_raw.js 0x0 1 dummycid u.enc.json --attestation attestation_sample.json

      - name: Score (NO_TX)
        run: node -r scripts/_argv_prep.cjs scripts/compute_scores_and_post_root_raw.js --attestation attestation_sample.json

      - name: Aggregate/Publish (NO_TX)
        run: node -r scripts/_argv_prep.cjs scripts/aggregate_and_publish_raw.js 0x0 1 agg.json dummyGlobalCid u.enc.json



